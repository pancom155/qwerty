<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>User Dashboard | Profile</title>
  <link rel="icon" type="image/png" href="https://scontent.fmnl8-6.fna.fbcdn.net/v/t39.30808-6/380741479_131206030075540_3076164827494524329_n.jpg">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<style>  
    .chat-button {
      position: fixed;
      bottom: 25px;
      right: 25px;
      background-color: #0d6efd;
      color: white;
      width: 60px;
      height: 60px;
      border-radius: 50%;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 1.5rem;
      cursor: pointer;
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
      z-index: 2000;
      transition: background 0.3s;
    }
    .chat-button:hover {
      background-color: #0b5ed7;
    }
        body {
        background-color: #ffffff;
        font-family: 'Poppins', sans-serif;
    }

    html {
        scroll-behavior: smooth;
    }

    .sidebar {
        position: fixed;
        top: 0;
        left: 0;
        width: 250px;
        height: 100vh;
        background-color: #eeeef5;
        padding: 10px;
        display: flex;
        flex-direction: column;
        align-items: center;
        z-index: 1000;
    }

    .sidebar img {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        object-fit: cover;
        margin: 20px 0;
    }

    .sidebar nav {
        display: flex;
        flex-direction: column;
        width: 100%;
        align-items: center;
    }

    .sidebar nav a {
        padding: 10px 20px;
        color: #000;
        text-decoration: none;
        border-radius: 10px;
        margin-bottom: 10px;
        transition: background 0.3s ease, color 0.3s ease;
        width: 90%;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .sidebar nav a:hover,
    .sidebar nav a.active {
        background: #5e5e5e;
        color: #fff;
    }

    .main-content {
        margin-left: 250px;
        padding: 20px;
    }

    .navbar-custom-wrapper {
        margin-left: 250px;
        padding: 3px 40px;
        position: sticky;
        top: 20px;
        z-index: 999;
    }

    .btn-primary {
        background: #ff6600;
        border: none;
    }

    .btn-primary:hover {
        background: #d75600;
    } 
    
    .navbar-custom {
        background-color: #eeeef5;
        border-radius: 40px;
        width: 95%;
        max-width: 1200px;
        padding: 0.5rem 1.5rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }
    
    h3 span {
        background-image: linear-gradient(to right, #03C4E7, #0047FF);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-weight: bold;
    }
    
    @media (max-width: 1200px) {
        .product-grid {
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); 
            justify-content: center;
        }
        .product-name {
            font-size: 1rem;
        }
        .product-price {
            font-size: 1rem;
        }
    }
    
    @media (max-width: 576px) {
        .product-grid {
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 15px;
        }
        .product-card img {
            height: 150px;
        }
    }
    
    .filter-container {
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 30px;
    }
    
    .custom-input {
        position: relative;
    }
    
    .custom-input i {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #666;
    }
    
    .custom-input input,
    .custom-input select {
        padding-left: 40px;
        border-radius: 8px;
        border: 1px solid #ddd;
    }
    
    .custom-input input:focus,
    .custom-input select:focus {
        border-color: #03C4E7;
        box-shadow: 0 0 0 0.25rem rgba(3, 196, 231, 0.25);
    }
    
    #orderMessage {
        font-size: 1.1rem;
        padding: 15px;
        border-radius: 8px;
    }
    
    .gradient-text {
        background: linear-gradient(to right, #03C4E7, #0047FF);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text; 
    }

    /* Validation styles */
    .name-helper {
        font-size: 0.8rem;
        color: #6c757d;
        transition: all 0.3s ease;
        max-height: 20px;
        overflow: hidden;
    }
    
    .valid-feedback, .invalid-feedback {
        display: block;
        font-size: 0.8rem;
    }
    
    .validation-item {
        transition: all 0.3s ease;
        max-height: 20px;
        overflow: hidden;
    }
    
    .validation-item.valid {
        max-height: 0;
        opacity: 0;
        margin: 0;
        padding: 0;
    }
    
    .validation-item.invalid {
        color: red;
    }
    
    .validation-item.default {
        color: #6c757d;
    }
    
    .helper-container {
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.4s ease-out;
    }
    
    .helper-container.show {
        max-height: 150px;
    }

    /* Mobile Responsive (max-width: 768px) */
    @media (max-width: 768px) {
        .sidebar {
            position: fixed;
            top: 0;
            left: -250px; /* hidden by default */
            width: 250px;
            height: 100%;
            background-color: #f8f9fa;
            padding: 20px 10px;
            box-shadow: 2px 0 5px rgba(0,0,0,0.1);
            transition: left 0.3s ease;
            z-index: 1100;
        }

        /* Sidebar when active */
        .sidebar.active {
            left: 0;
        }

        /* Overlay when sidebar is open */
        .sidebar-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.3);
            display: none;
            z-index: 1000;
        }

        .sidebar-overlay.active {
            display: block;
        }

        /* Add a hamburger button */
        .hamburger {
            position: fixed;
            top: 28px;
            left: 5px;
            background: linear-gradient(to right, #ff8c00, #ff7700);
            color: white;
            border: none;
            border-radius: 6px;
            padding: 10px 12px;
            font-size: 1.2rem;
            cursor: pointer;
            z-index: 1200;
        }

        /* Adjust main content */
        .main-content {
            margin-left: 0;
            padding: 20px;
        }

        .navbar-custom-wrapper {
            margin-left: 0;
        }
      }


</style>
<body>
  <div class="sidebar" id="sidebar">
    <div class="d-flex justify-content-center mb-5 mt-3">
      <img src="<%= settings.logo ? settings.logo : '/images/napslogo.png' %>" alt="Logo" width="150" />
    </div>
    <nav>
  
      <a href="/user/menu"><i class="bi bi-list-ul"></i> Browse Menu</a>
      <a href="/user/reservation"><i class="bi bi-calendar-check"></i> Book Reservation</a>
      <a href="/user/orders"><i class="bi bi-bag"></i> Orders</a>
      <a href="/user/reviews"><i class="bi bi-star"></i> Reviews</a>
      <a href="/user/voucher" ><i class="bi bi-ticket-perforated"></i> Voucher</a>
      <a href="/user/myreservation"><i class="bi bi-calendar-event"></i> My Reservations</a>
      <a href="/user/Profile" class="active"><i class="bi bi-calendar-event"></i>Profile</a>
      <a href="/user/customer_support"><i class="bi bi-headset"></i> Support</a>
 

    </nav>
  </div>

  <div class="navbar-custom-wrapper">
    <nav class="navbar-custom d-flex justify-content-between align-items-center">
      <% if (user) { %>
        <div class="d-flex align-items-center gap-3">
          <a href="/user/profile" class="d-flex align-items-center text-decoration-none text-dark">
            <% if (user.profileImage) { %>
              <img src="<%= user.profileImage %>" alt="Profile" width="45" height="45" class="rounded-circle me-2" style="object-fit: cover;">
            <% } else { %>
              <div class="d-flex justify-content-center align-items-center me-2" style="width: 45px; height: 45px; border-radius: 50%; background-color: #ccc;">
                <i class="bi bi-person text-white"></i>
              </div>
            <% } %>
            <div class="admin-info d-none d-md-block">
              <div class="fw-semibold"><%= user.firstName || 'User' %></div>
              <small class="text-muted"><%= user.email %></small>
            </div>
          </a>
        </div>
        <div class="d-flex align-items-center gap-3">
          <a href="/logout" class="btn btn-sm btn-danger d-flex align-items-center">
            <i class="bi bi-box-arrow-right me-1"></i> Logout
          </a>
        </div>
      <% } %>
    </nav>
  </div>
<!-- Hamburger Button -->
<button class="hamburger">â˜°</button>

<!-- Sidebar Overlay -->
<div class="sidebar-overlay"></div>

  <div class="container py-4">
  <div class="main-content d-flex justify-content-center">
    <div class="card shadow-lg border-0 rounded-4 p-4" style="max-width: 600px; width: 100%;">
      
      <!-- Profile Picture -->
      <div class="text-center mb-4">
        <img src="<%= user.profileImage || '/images/napslogo.png' %>" 
             alt="Profile" 
             class="rounded-circle border border-3 border-primary shadow-sm"
             style="width: 150px; height: 150px; object-fit: cover;">
        <h4 class="fw-bold mt-3"><%= user.firstName %> <%= user.lastName %></h4>
        <p class="text-muted"><%= user.email %></p>
      </div>

      <h5 class="fw-bold mb-3 text-center">Edit Profile</h5>
      <form id="editProfileForm" action="/user/edit-profile" method="POST" enctype="multipart/form-data">
        <div class="mb-3">
          <label class="form-label">First Name</label>
          <input type="text" class="form-control" name="firstName" id="firstName" value="<%= user.firstName %>" required>
          <div class="name-helper mt-1">
            <small id="firstNameHelper" class="validation-item default">Only alphabetical characters allowed</small>
          </div>
        </div>
        <div class="mb-3">
          <label class="form-label">Last Name</label>
          <input type="text" class="form-control" name="lastName" id="lastName" value="<%= user.lastName %>" required>
          <div class="name-helper mt-1">
            <small id="lastNameHelper" class="validation-item default">Only alphabetical characters allowed</small>
          </div>
        </div>
        <div class="mb-3">
          <label class="form-label">Address</label>
          <input type="text" class="form-control" name="address" value="<%= user.address %>" required>
        </div>
        <div class="mb-3">
          <label class="form-label">Contact Number</label>
          <input type="text" class="form-control" name="contactNo" id="contactNo" value="<%= user.contactNo %>" required maxlength="11">
          <div id="phoneHelper" class="helper-container small text-muted">
            <p id="startsWith09" class="mb-1 validation-item default">Must start with 09</p>
            <p id="length11" class="mb-1 validation-item default">Must be exactly 11 digits</p>
            <p id="onlyDigits" class="mb-1 validation-item default">Must contain only numbers</p>
          </div>
        </div>
        <div class="mb-4">
          <label class="form-label">Update Profile Image</label>
          <input type="file" class="form-control" name="profileImage" id="profileImage" accept="image/jpeg, image/jpg, image/png, image/webp">
          <div class="invalid-feedback" id="profileImageError">Please select a valid image file (JPEG, PNG, WebP)</div>
        </div>
        <div class="d-flex justify-content-center" style="align-items: center;">
          <button type="submit" class="btn btn-primary px-4">Save Changes</button>
        </div>
      </form>
    </div>
  </div>
</div>

  <!-- Customer Support Chat Button -->
  <div id="chatButton" class="chat-button">
    <i class="bi bi-chat-dots-fill"></i>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    
    const chatButton = document.getElementById('chatButton');
    chatButton.addEventListener('click', () => {
      window.location.href = '/user/customer_support';
    }); 
    
    const hamburger = document.querySelector('.hamburger');
    const sidebar = document.querySelector('.sidebar');
    const overlay = document.querySelector('.sidebar-overlay');

    // Toggle sidebar
    hamburger.addEventListener('click', () => {
      sidebar.classList.toggle('active');
      overlay.classList.toggle('active');
    });

    // Close sidebar when overlay is clicked
    overlay.addEventListener('click', () => {
      sidebar.classList.remove('active');
      overlay.classList.remove('active');
    });

    const editProfileForm = document.getElementById("editProfileForm");

    editProfileForm.addEventListener("submit", function(e) {
      e.preventDefault(); // prevent normal submit
      
      // Validate all fields before submission
      if (!validateForm()) {
        return;
      }

      Swal.fire({
        title: 'Are you sure?',
        text: "Do you want to save these changes to your profile?",
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#0d6efd',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, save it',
        cancelButtonText: 'Cancel'
      }).then((result) => {
        if (result.isConfirmed) {
          // submit the form manually
          editProfileForm.submit();
        }
      });
    });

    // âœ… Show success alert when redirected
    document.addEventListener('DOMContentLoaded', () => {
      const params = new URLSearchParams(location.search);
      if (params.get('success') === 'profile-updated') {
        Swal.fire({
          icon: 'success',
          title: 'Profile Updated!',
          text: 'Your profile has been successfully updated.',
          timer: 2000,
          showConfirmButton: false
        });
      }
    });

    // Name validation functions
    function validateName(name) {
      // Allow only alphabetical characters, spaces, hyphens, and apostrophes
      return /^[A-Za-z\s\-']+$/.test(name);
    }

    function updateNameValidation(inputId, helperId) {
      const input = document.getElementById(inputId);
      const helper = document.getElementById(helperId);
      
      if (input.value.length > 0) {
        if (validateName(input.value)) {
          input.classList.remove('is-invalid');
          input.classList.add('is-valid');
          helper.classList.remove('default', 'invalid');
          helper.classList.add('valid');
        } else {
          input.classList.remove('is-valid');
          input.classList.add('is-invalid');
          helper.classList.remove('default', 'valid');
          helper.classList.add('invalid');
        }
      } else {
        input.classList.remove('is-valid', 'is-invalid');
        helper.classList.remove('valid', 'invalid');
        helper.classList.add('default');
      }
    }

    // Phone validation
    const contactInput = document.getElementById("contactNo");
    const phoneHelper = document.getElementById("phoneHelper");

    const startsWith09 = document.getElementById("startsWith09");
    const length11 = document.getElementById("length11");
    const onlyDigits = document.getElementById("onlyDigits");

    contactInput.addEventListener("input", () => {
      const value = contactInput.value;
      
      // Show/hide helper with animation
      if (value.length > 0 && !phoneHelper.classList.contains('show')) {
        phoneHelper.classList.add('show');
      } else if (value.length === 0 && phoneHelper.classList.contains('show')) {
        phoneHelper.classList.remove('show');
      }
      
      // Update requirement states
      updateValidationItem(startsWith09, value.startsWith("09"));
      updateValidationItem(length11, value.length === 11);
      updateValidationItem(onlyDigits, /^\d*$/.test(value));
    });

    // Function to update validation item state
    function updateValidationItem(element, isValid) {
      if (isValid) {
        element.classList.remove('default', 'invalid');
        element.classList.add('valid');
      } else {
        element.classList.remove('default', 'valid');
        element.classList.add('invalid');
      }
    }

    // Profile image validation
    const profileImageInput = document.getElementById("profileImage");
    const profileImageError = document.getElementById("profileImageError");
    const profileImageSuccess = document.getElementById("profileImageSuccess");

    profileImageInput.addEventListener("change", function() {
      const file = this.files[0];
      if (file) {
        // Check if the file is an image but NOT a GIF
        const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];
        
        if (allowedTypes.includes(file.type) && !file.type.includes('gif')) {
          this.classList.remove('is-invalid');
          this.classList.add('is-valid');
          profileImageError.style.display = 'none';
          profileImageSuccess.style.display = 'block';
        } else {
          this.classList.remove('is-valid');
          this.classList.add('is-invalid');
          profileImageError.style.display = 'block';
          profileImageSuccess.style.display = 'none';
        }
      } else {
        this.classList.remove('is-invalid', 'is-valid');
        profileImageError.style.display = 'none';
        profileImageSuccess.style.display = 'none';
      }
    });

    // Add event listeners for name validation
    document.getElementById('firstName').addEventListener('input', function() {
      updateNameValidation('firstName', 'firstNameHelper');
    });

    document.getElementById('lastName').addEventListener('input', function() {
      updateNameValidation('lastName', 'lastNameHelper');
    });

    // Form validation function
    function validateForm() {
      // Validate names
      const firstName = document.getElementById('firstName').value;
      const lastName = document.getElementById('lastName').value;
      
      if (!validateName(firstName) || !validateName(lastName)) {
        Swal.fire("Invalid Name", "Please enter valid first and last names using only alphabetical characters.", "warning");
        return false;
      }

      // Validate phone
      const phoneValue = contactInput.value;
      const validPhone = /^09\d{9}$/.test(phoneValue);

      if (!validPhone) {
        Swal.fire("Invalid Phone Number", "Please enter a valid Philippine number starting with 09 and exactly 11 digits.", "error");
        return false;
      }

      // Validate profile image if selected
      const profileImageFile = profileImageInput.files[0];
      if (profileImageFile) {
        const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];
        if (!allowedTypes.includes(profileImageFile.type) || profileImageFile.type.includes('gif')) {
          Swal.fire("Invalid Image", "Please select a valid image file (JPEG, PNG, WebP). GIF files are not allowed.", "error");
          return false;
        }
      }

      return true;
    }

  </script>
</body>
</html>
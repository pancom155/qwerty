<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>User Dashboard | Orders</title>
  <link rel="icon" type="image/png" href="https://scontent.fmnl8-6.fna.fbcdn.net/v/t39.30808-6/380741479_131206030075540_3076164827494524329_n.jpg">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/UserOrder.css">
  <script src="https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<style>
 .pending-notification {
  position: fixed;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
  min-width: 300px;
  max-width: 500px;
  background-color: #f0f8ff;
  color: #0d6efd;
  font-weight: 600;
  padding: 12px 20px;
  z-index: 1050;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  font-size: 1rem;
}

/* Cooking animation: pan flipping */
.cooking .animation-icon {
  display: inline-block;
  animation: flip 1s infinite;
}
@keyframes flip {
  0% { transform: rotate(0deg); }
  50% { transform: rotate(20deg) translateY(-5px); }
  100% { transform: rotate(0deg); }
}

/* Processing animation: simmering steam */
.processing .animation-icon {
  display: inline-block;
  animation: steam 1s infinite;
}
@keyframes steam {
  0% { transform: translateY(0); opacity: 0.6; }
  50% { transform: translateY(-8px); opacity: 1; }
  100% { transform: translateY(0); opacity: 0.6; }
}

/* Ready to pickup animation: truck moving */
.ready .animation-icon {
  display: inline-block;
  animation: drive 2s linear infinite;
}
@keyframes drive {
  0% { transform: translateX(-10px); }
  50% { transform: translateX(10px); }
  100% { transform: translateX(-10px); }
}

/* Chat Button */
.chat-button {
  position: fixed;
  bottom: 25px;
  right: 25px;
  background-color: #0d6efd;
  color: white;
  width: 60px;
  height: 60px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.5rem;
  cursor: pointer;
  box-shadow: 0 4px 12px rgba(0,0,0,0.2);
  z-index: 2000;
  transition: background 0.3s;
}
.chat-button:hover {
  background-color: #0b5ed7;
}
</style>
<body>
<% 
  const pendingOrder = orders.find(o => o.status === 'pending');
  const processingOrder = orders.find(o => o.status === 'processing');
  const readyOrder = orders.find(o => o.status === 'ready_to_pickup');
%>

<% if (pendingOrder) { %>
  <div class="pending-notification cooking">
    <div class="animation-icon">üç≥</div>
    <strong>Preparing your order...</strong>
  </div>
<% } else if (processingOrder) { %>
  <div class="pending-notification processing">
    <div class="animation-icon">ü•ò</div>
    <strong>Your order is being processed...</strong>
  </div>
<% } else if (readyOrder) { %>
  <div class="pending-notification ready">
    <div class="animation-icon">üöö</div>
    <strong>Your order is ready for pickup!</strong>
  </div>
<% } %>



  <div class="sidebar" id="sidebar">
    <div class="d-flex justify-content-center mb-5 mt-3">
     <img src="<%= settings.logo ? settings.logo : '/images/napslogo.png' %>" alt="Logo" width="150" />
    </div>
    <nav>
 
      <a href="/user/menu"><i class="bi bi-list-ul"></i> Browse Menu</a>
      <a href="/user/reservation"><i class="bi bi-calendar-check"></i> Book Reservation</a>
      <a href="/user/orders" class="active"><i class="bi bi-bag"></i> Orders</a>
      <a href="/user/reviews"><i class="bi bi-star"></i> Reviews</a>
      <a href="/user/voucher"><i class="bi bi-ticket-perforated"></i> Voucher</a>
      <a href="/user/myreservation"><i class="bi bi-calendar-event"></i> My Reservations</a>
     <a href="/user/profile"><i class="bi bi-person-circle"></i> Profile</a>
     <a href="/user/customer_support"><i class="bi bi-headset"></i> Support</a>

     
    </nav>
  </div>

  <div class="navbar-custom-wrapper">
    <nav class="navbar-custom d-flex justify-content-between align-items-center">
      <% if (user) { %>
        <div class="d-flex align-items-center gap-3">
          <a href="/user/profile" class="d-flex align-items-center text-decoration-none text-dark">
            <% if (user.profileImage) { %>
              <img src="<%= user.profileImage %>" alt="Profile" width="45" height="45" class="rounded-circle me-2" style="object-fit: cover;">
            <% } else { %>
              <div class="d-flex justify-content-center align-items-center me-2" style="width: 45px; height: 45px; border-radius: 50%; background-color: #ccc;">
                <i class="bi bi-person text-white"></i>
              </div>
            <% } %>
            <div class="admin-info d-none d-md-block">
              <div class="fw-semibold"><%= user.firstName || 'User' %></div>
              <small class="text-muted"><%= user.email %></small>
            </div>
          </a>
        </div>
        <div class="d-flex align-items-center gap-3">
          <a href="/logout" class="btn btn-sm btn-danger d-flex align-items-center">
            <i class="bi bi-box-arrow-right me-1"></i> Logout
          </a>
        </div>
      <% } %>
    </nav>
  </div>
<!-- Hamburger Button -->
<button class="hamburger" id="hamburgerBtn">‚ò∞</button>

<!-- Sidebar Overlay -->
<div class="sidebar-overlay" id="sidebarOverlay"></div>

  <div class="container py-1">
    <div class="main-content">
  <div class="container py-4">
   <h3 class="mb-4 text-center fw-bold">Ongoing <span>Orders</span></h3>
<div class="card shadow-sm mb-5">
  <div class="card-body">
    <% const ongoingOrders = orders.filter(o => ['pending','processing','ready_to_pickup'].includes(o.status)); %>
    <% if (ongoingOrders.length > 0) { %>
      <table class="table table-hover align-middle">
        <thead>
          <tr>
            <th>Order ID</th>
            <th>Status</th>
            <th>Ordered At</th>
            <th>Net Total</th>
            <th>Reference #</th>
            <th>Order Items</th>
          </tr>
        </thead>
        <tbody>
          <% ongoingOrders.forEach(order => { %>
            <tr>
              <td><%= order._id %></td>
              <td><span class="badge bg-warning text-dark"><%= order.status %></span></td>
              <td><%= moment(order.createdAt).format('MMMM D, YYYY - h:mm A') %></td>
              <td>‚Ç±<%= order.netTotal.toFixed(2) %></td>
              <td><button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#proofModal<%= order._id %>">View Proof</button></td>
              <td><button class="btn btn-sm btn-primary me-1" data-bs-toggle="modal" data-bs-target="#itemsModal<%= order._id %>">View Order Items</button></td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    <% } else { %>
      <div class="text-center py-5">
        <i class="bi bi-bag-x fs-1 text-muted"></i>
        <p class="mt-3 text-muted fw-semibold">No ongoing orders at the moment.</p>
      </div>
    <% } %>
  </div>
</div>

<h3 class="mb-4 text-center fw-bold">Order <span>History</span></h3>
<div class="card shadow-sm">
  <div class="card-body">
    <% const historyOrders = orders.filter(o => ['completed','rejected','cancelled'].includes(o.status)); %>
    <% if (historyOrders.length > 0) { %>
      <table class="table table-striped table-bordered align-middle">
        <thead>
          <tr>
            <th>Order ID</th>
            <th>Status</th>
            <th>Ordered At</th>
            <th>Net Total</th>
            <th>Reference #</th>
            <th>Order Items</th>
          </tr>
        </thead>
        <tbody>
          <% historyOrders.forEach(order => { %>
            <tr>
              <td><%= order._id %></td>
              <td>
                <% if (order.status === 'completed') { %>
                  <span class="badge bg-success"><%= order.status %></span>
                <% } else if (order.status === 'rejected') { %>
                  <span class="badge bg-danger"><%= order.status %></span>
                <% } else { %>
                  <span class="badge bg-secondary"><%= order.status %></span>
                <% } %>
              </td>
              <td><%= moment(order.createdAt).format('MMMM D, YYYY - h:mm A') %></td>
              <td>‚Ç±<%= order.netTotal.toFixed(2) %></td>
              <td><button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#proofModal<%= order._id %>">View Proof</button></td>
              <td><button class="btn btn-sm btn-primary me-1" data-bs-toggle="modal" data-bs-target="#itemsModal<%= order._id %>">View My Order Items</button></td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    <% } else { %>
      <div class="text-center py-5">
        <i class="bi bi-archive fs-1 text-muted"></i>
        <p class="mt-3 text-muted fw-semibold">No past orders yet.</p>
      </div>
    <% } %>
  </div>
</div>


    <% orders.forEach(order => { %>
    <div class="modal fade" id="itemsModal<%= order._id %>" tabindex="-1" aria-labelledby="itemsModalLabel<%= order._id %>" >
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title"><i class="bi bi-receipt-cutoff me-2"></i>Order Items ‚Äî <%= order._id %></h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>

        <div class="modal-body">
            <% if (order.items && order.items.length > 0) { %>
            <ul class="list-group mb-4">
                <% order.items.forEach(item => { %>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                    <% if (item.productId?.image) { %>
                        <img src="/uploads/<%= item.productId?.image || 'default.png' %>" alt="Item Image" class="me-3 rounded" style="width: 60px; height: 60px; object-fit: cover;">
                    <% } else { %>
                        <div class="me-3 rounded bg-secondary" style="width: 60px; height: 60px;"></div>
                    <% } %>
                    <div>
                        <div class="fw-bold"><%= item.productName || item.productId?.name || 'Unknown Item' %></div>
                        <small class="text-muted">Price: ‚Ç±<%= item.price?.toFixed(2) || '0.00' %></small>
                    </div>
                    </div>
                    <span class="badge bg-primary rounded-pill">x<%= item.quantity %></span>
                </li>
                <% }) %>
            </ul>
            <% } else { %>
            <p class="text-muted text-center">No items found for this order.</p>
            <% } %>

            <% if (order.discounts?.length > 0) { %>
            <div class="mt-4">
                <h6 class="fw-bold"><i class="bi bi-tags-fill me-2"></i>Discount Details</h6>
                <% order.discounts.forEach(discount => { %>
                <div class="text-muted"><%= discount.description %> ‚Äî ‚Ç±<%= discount.amount.toFixed(2) %></div>
                <% }) %>
            </div>
            <% } %>

            <div class="p-3 mt-4 rounded bg-light shadow-sm">
            <h6 class="fw-bold text-primary"><i class="bi bi-calculator-fill me-2"></i>Order Summary</h6>
            <div class="d-flex justify-content-between border-bottom py-1">
                <span><i class="bi bi-cash-coin me-1"></i>Gross Total:</span>
                <span class="fw-semibold">‚Ç±<%= order.grossTotal.toFixed(2) %></span>
            </div>
            <% if (order.discountTotal > 0) { %>
                <div class="d-flex justify-content-between border-bottom py-1 text-success">
                <span><i class="bi bi-patch-check-fill me-1"></i>Discount:</span>
                <span class="fw-semibold">- ‚Ç±<%= order.discountTotal.toFixed(2) %></span>
                </div>
            <% } %>
            <div class="d-flex justify-content-between pt-2 fw-bold fs-5 text-success">
                <span><i class="bi bi-wallet2 me-1"></i>Net Total:</span>
                <span>‚Ç±<%= order.netTotal.toFixed(2) %></span>
            </div>
            </div>
        </div>
        </div>
    </div>
    </div>

      <div class="modal fade" id="proofModal<%= order._id %>" tabindex="-1" aria-labelledby="proofModalLabel<%= order._id %>" >
        <div class="modal-dialog modal-md modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Proof of Payment ‚Äì <%= order._id %></h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center">
              <% if (order.payment && order.payment.proofOfPayment) { %>
                <img src="/uploads/<%= order.payment.proofOfPayment %>" alt="Proof of Payment" class="img-fluid rounded shadow-sm mb-3">
                <p><strong>Reference #:</strong> <%= order.payment.referenceNumber %></p>
              <% } else { %>
                <p class="text-muted">No proof of payment uploaded.</p>
              <% } %>
            </div>
          </div>
        </div>
      </div>
    <% }) %>

  </div>
    </div>
   <!-- Customer Support Chat Button -->
<div id="chatButton" class="chat-button" style="cursor:pointer;">
  <i class="bi bi-chat-dots-fill"></i>
</div>
  </div>
<script src="/socket.io/socket.io.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>

      const chatButton = document.getElementById('chatButton');
  chatButton.addEventListener('click', () => {
    window.location.href = '/user/customer_support';
  });

    const hamburgerBtn = document.getElementById('hamburgerBtn');
  const sidebar = document.querySelector('.sidebar');
  const overlay = document.getElementById('sidebarOverlay');

  // Toggle sidebar
  hamburgerBtn.addEventListener('click', () => {
    sidebar.classList.toggle('active');
    overlay.classList.toggle('active');
  });

  // Close sidebar when overlay clicked
  overlay.addEventListener('click', () => {
    sidebar.classList.remove('active');
    overlay.classList.remove('active');
  });

  // Optional: close sidebar when a nav link is clicked
  document.querySelectorAll('.sidebar nav a').forEach(link => {
    link.addEventListener('click', () => {
      sidebar.classList.remove('active');
      overlay.classList.remove('active');
    });
  });
setInterval(() => {
      location.reload();
    }, 5000);
  </script>
</body>
</html>

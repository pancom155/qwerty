<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>User Dashboard | Customer Support</title>

  <link rel="icon" type="image/png" href="https://scontent.fmnl8-6.fna.fbcdn.net/v/t39.30808-6/380741479_131206030075540_3076164827494524329_n.jpg">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/UserSupport.css">
</head>
<body>

  <!-- Sideba -->
  <div class="sidebar" id="sidebar">
    <div class="d-flex justify-content-center mb-5 mt-3">
      <img src="/images/napslogo.png" alt="Logo">
    </div>
    <nav>
  
      <a href="/user/menu"><i class="bi bi-list-ul"></i> Browse Menu</a>
      <a href="/user/reservation"><i class="bi bi-calendar-check"></i> Book Reservation</a>
      <a href="/user/orders"><i class="bi bi-bag"></i> Orders</a>
      <a href="/user/reviews"><i class="bi bi-star"></i> Reviews</a>
      <a href="/user/voucher" ><i class="bi bi-ticket-perforated"></i> Voucher</a>
      <a href="/user/myreservation"><i class="bi bi-calendar-event"></i> My Reservations</a>
      <a href="/user/Profile" ><i class="bi bi-calendar-event"></i>Profile</a>
       <a href="/user/customer_support"class="active"><i class="bi bi-headset"></i> Support</a>

    </nav>   
  </div>

  <!-- Navbar -->
  <div class="navbar-custom-wrapper">
    <nav class="navbar-custom d-flex justify-content-between align-items-center px-3 py-2">
      <% if (user) { %>
        <div class="d-flex align-items-center gap-3">
          <a href="/user/profile" class="d-flex align-items-center text-decoration-none text-dark">
            <% if (user.profileImage) { %>
              <img src="<%= user.profileImage %>" alt="Profile" width="45" height="45" class="rounded-circle me-2" style="object-fit: cover;">
            <% } else { %>
              <div class="d-flex justify-content-center align-items-center me-2" style="width: 45px; height: 45px; border-radius: 50%; background-color: #ccc;">
                <i class="bi bi-person text-white"></i>
              </div>
            <% } %>
            <div class="admin-info d-none d-md-block">
              <div class="fw-semibold"><%= user.firstName || 'User' %></div>
              <small class="text-muted"><%= user.email %></small>
            </div>
          </a>
        </div>
        <div class="d-flex align-items-center gap-3">
          <a href="/logout" class="btn btn-sm btn-danger d-flex align-items-center">
            <i class="bi bi-box-arrow-right me-1"></i> Logout
          </a>
        </div>
      <% } %>
    </nav>
  </div>

      <button class="hamburger" id="hamburgerBtn">â˜°</button>
    <div class="sidebar-overlay" id="sidebarOverlay"></div>

  <div class="container mt-4" style="max-width: 1000px;">
  <!-- Chat Info Card -->
  <div class="card shadow-sm border-0 mb-3">
    <div class="card-body">
      <h4 class="card-title fw-bold mb-3">
        <i class="bi bi-headset me-2"></i>Welcome to <span>Customer Support</span>
      </h4>
      <p class="card-text">
        If you have any questions or issues regarding your orders, reservations, or account, you can chat directly with our support staff here. 
        All messages are visible in real-time, and our staff will respond as soon as possible.
      </p>
      <ul class="list-group list-group-flush mt-3">
        <li class="list-group-item d-flex align-items-center">
          <span class="badge bg-primary me-2"><i class="bi bi-info-circle"></i></span>
          Include your order or reservation ID if relevant.
        </li>
        <li class="list-group-item d-flex align-items-center">
          <span class="badge bg-primary me-2"><i class="bi bi-chat-left-text"></i></span>
          Provide a clear description of your issue.
        </li>
        <li class="list-group-item d-flex align-items-center">
          <span class="badge bg-primary me-2"><i class="bi bi-clock"></i></span>
          Our support team is available from 11:30 AM to 11:30 PM daily.
        </li>
      </ul>
    </div>
  </div>

  <!-- Chat Container -->
  <div class="chat-container shadow-sm"style="max-width: 1000px;">
    <div class="chat-box" id="chatBox">
      <% chats.forEach(chat => { %>
        <% chat.messages.forEach(msg => { %>
          <div class="d-flex mb-2 <%= msg.sender === 'user' ? 'justify-content-end flex-row-reverse' : 'justify-content-start' %> align-items-end">

            <!-- Profile Icon -->
            <div class="profile-icon ms-2">
              <% if(msg.sender === 'staff') { %>
                <i class="bi bi-person-circle fs-4 text-primary"></i>
              <% } else { %>
                <i class="bi bi-person-circle fs-4 text-success"></i>
              <% } %>
            </div>

            <!-- Message Bubble -->
            <div class="message <%= msg.sender === 'user' ? 'user-message' : 'staff-message' %> shadow-sm">
              <div class="sender-email"><%= msg.email %></div>

              <% if (msg.message) { %>
                <div class="message-text"><%= msg.message %></div>
              <% } %>

              <% if (msg.image) { %>
                <img src="<%= msg.image %>" alt="sent image" style="max-width:200px; border-radius:8px; margin-top:5px; display:block;">
              <% } %>

              <div class="message-time">
                <%= msg.timestamp ? new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute:'2-digit' }) : '' %>
              </div>
            </div>
          </div>
        <% }) %>
      <% }) %>
    </div>

    <!-- Chat Input -->
    <form id="chatForm" class="chat-input d-flex align-items-center mt-2" action="/user/customer_support/send" method="POST" enctype="multipart/form-data">
      <input type="text" name="message" class="form-control" placeholder="Type a message...">
      <input type="file" name="image" id="chatImageInput" accept="image/*" style="display:none;">
      
      <button type="button" class="btn btn-light me-2" id="uploadBtn" title="Attach Image">
        <i class="bi bi-image"></i>
      </button>

      <button type="submit" class="send-btn shadow">
        <i class="bi bi-send-fill"></i>
      </button>
    </form>
  </div>
</div>

<script>
const uploadBtn = document.getElementById('uploadBtn');
const chatImageInput = document.getElementById('chatImageInput');
const chatForm = document.getElementById('chatForm');
const chatBox = document.getElementById('chatBox');

// Create a small image preview beside upload button
const previewContainer = document.createElement('div');
previewContainer.className = 'preview-img';
previewContainer.style.display = 'flex';
previewContainer.style.alignItems = 'center';
previewContainer.style.marginLeft = '8px'; // small spacing
previewContainer.style.position = 'relative';

// Insert preview container right after upload button
uploadBtn.insertAdjacentElement('afterend', previewContainer);

// Trigger file input when upload button is clicked
uploadBtn.addEventListener('click', () => {
  chatImageInput.click();
});

// Show small image preview beside button
chatImageInput.addEventListener('change', () => {
  const file = chatImageInput.files[0];
  if (file) {
    const reader = new FileReader();
    reader.onload = function(e) {
      previewContainer.innerHTML = `
        <img src="${e.target.result}" 
             style="width: 45px; height: 45px; border-radius: 6px; object-fit: cover; border: 1px solid #ddd; margin-right: 10px">
      `;
    };
    reader.readAsDataURL(file);
  } else {
    previewContainer.innerHTML = '';
  }
});

// Fetch messages function
async function fetchMessages() {
  try {
    const res = await fetch('/user/customer_support/messages');
    const chats = await res.json();
    chatBox.innerHTML = ''; // clear chat box

    chats.forEach(chat => {
      chat.messages.forEach(msg => {
        const msgDiv = document.createElement('div');
        msgDiv.className = `d-flex mb-2 ${msg.sender === 'user' ? 'justify-content-end flex-row-reverse' : 'justify-content-start'} align-items-end`;

        const profileIcon = document.createElement('div');
        profileIcon.className = 'profile-icon ms-2';
        profileIcon.innerHTML = `<i class="bi bi-person-circle fs-4 ${msg.sender === 'staff' ? 'text-primary' : 'text-success'}"></i>`;

        const bubble = document.createElement('div');
        bubble.className = `message ${msg.sender === 'user' ? 'user-message' : 'staff-message'} shadow-sm`;
        bubble.innerHTML = `
          <div class="sender-email">${msg.email}</div>
          ${msg.message ? `<div class="message-text">${msg.message}</div>` : ''}
          ${msg.image ? `<img src="${msg.image}" alt="sent image" style="max-width:200px; border-radius:8px; margin-top:5px; display:block;">` : ''}
          <div class="message-time">${msg.timestamp ? new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute:'2-digit' }) : ''}</div>
        `;

        msgDiv.appendChild(profileIcon);
        msgDiv.appendChild(bubble);
        chatBox.appendChild(msgDiv);
      });
    });

    chatBox.scrollTop = chatBox.scrollHeight;
  } catch (err) {
    console.error('Error fetching messages:', err);
  }
}

// Poll every 5 seconds
setInterval(fetchMessages, 5000);
fetchMessages();

// Handle sending message
chatForm.addEventListener('submit', async (e) => {
  e.preventDefault();
  const formData = new FormData(chatForm);

  try {
    await fetch(chatForm.action, {
      method: 'POST',
      body: formData
    });

    chatForm.reset();
    previewContainer.innerHTML = ''; // clear preview
    fetchMessages();
  } catch (err) {
    console.error('Error sending message:', err);
  }
});
 const hamburger = document.querySelector('.hamburger');
    const sidebar = document.querySelector('.sidebar');
    const overlay = document.querySelector('.sidebar-overlay');

    // Toggle sidebar
    hamburger.addEventListener('click', () => {
      sidebar.classList.toggle('active');
      overlay.classList.toggle('active');
    });

    // Close sidebar when overlay is clicked
    overlay.addEventListener('click', () => {
      sidebar.classList.remove('active');
      overlay.classList.remove('active');
    });
</script>

</body>
</html>

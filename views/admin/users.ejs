<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Admin Users</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
</head>
<style>
/* ===== GLOBAL STYLES ===== */
body {
  display: flex;
  min-height: 100vh;
  margin: 0;
  background-color: #f1f1f1;
}

.container-fluid {
  padding: 2rem;
}

/* ===== SIDEBAR ===== */
.sidebar {
  position: fixed;
  top: 0;
  left: 0;
  width: 250px;
  height: 100vh;
  background-color: #f8f9fa;
  padding: 5px;
  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow: hidden;
  z-index: 1000;
}

.sidebar img {
  width: 100px;
  height: 100px;
  border-radius: 50%;
}

.sidebar nav {
  display: flex;
  flex-direction: column;
  width: 100%;
  align-items: center;
}

.sidebar nav a {
  width: 90%;
  padding: 10px 20px;
  margin-bottom: 10px;
  color: #000;
  text-decoration: none;
  border-radius: 10px;
  transition: background 0.5s ease;
}

.sidebar nav a.active,
.sidebar nav a:hover {
  background: #5e5e5e;
  color: #fff;
}

/* ===== MAIN CONTENT ===== */
.main-content {
  margin-left: 250px;
  flex-grow: 1;
  padding: 0;
  display: flex;
  flex-direction: column;
}

/* ===== NAVBAR ===== */
.navbar-custom-wrapper {
  display: flex;
  justify-content: center;
  margin-bottom: 20px;
}

.navbar-custom {
  background-color: #ffffff;
  border-bottom-left-radius: 20px;
  border-bottom-right-radius: 20px;
  width: 95%;
  max-width: 1200px;
  padding: 0.5rem 1.5rem;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.navbar-custom img {
  width: 40px;
  height: 40px;
  object-fit: cover;
  border: 1px solid black;
}

.navbar-custom .admin-info {
  line-height: 1.2;
}

.navbar-custom .admin-info .fw-semibold {
  font-size: 1rem;
  color: #343a40;
}

.navbar-custom .admin-info p {
  margin: 0;
  font-size: 0.875rem;
  color: #6c757d;
}

.navbar-custom .btn-danger {
  padding: 0.4rem 0.6rem;
}

/* ===== TABLE STYLES - CLEAN DESIGN ===== */
.table-container {
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.06);
  overflow: hidden;
  margin-bottom: 1.5rem;
}

.table {
  margin-bottom: 0;
  border-collapse: separate;
  border-spacing: 0;
}

.table thead th {
  background-color: #f8f9fa;
  color: #495057;
  font-weight: 600;
  font-size: 0.85rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border: none;
  padding: 1rem 0.75rem;
  vertical-align: middle;
}

.table tbody td {
  padding: 1rem 0.75rem;
  border-bottom: 1px solid #f1f3f4;
  vertical-align: middle;
  font-size: 0.9rem;
  color: #424242;
}

.table tbody tr:last-child td {
  border-bottom: none;
}

.table tbody tr:hover {
  background-color: #f7faff;
}

/* Status badges */
.status-badge {
  padding: 0.35rem 0.75rem;
  border-radius: 20px;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.status-active {
  background-color: #d4edda;
  color: #155724;
}

.status-blocked {
  background-color: #f8d7da;
  color: #721c24;
}

/* Action buttons */
.btn-action {
  padding: 0.4rem 0.8rem;
  font-size: 0.8rem;
  border-radius: 6px;
  display: inline-flex;
  align-items: center;
  gap: 4px;
  transition: all 0.2s ease;
  border: none;
}

.btn-block {
  background-color: #ffc107;
  color: #212529;
}

.btn-block:hover {
  background-color: #e0a800;
  color: #212529;
}

.btn-unblock {
  background-color: #28a745;
  color: white;
}

.btn-unblock:hover {
  background-color: #218838;
  color: white;
}

/* User info */
.user-info {
  line-height: 1.4;
}

.user-name {
  font-weight: 600;
  color: #212529;
}

.user-email {
  font-size: 0.8rem;
  color: #6c757d;
}

/* Search and filter */
.search-filter-container {
  display: flex;
  gap: 1rem;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
  align-items: center;
}

.search-box {
  flex: 1;
  min-width: 300px;
  max-width: 400px;
}

.filter-select {
  width: 180px;
}

/* Pagination */
.pagination-container {
  display: flex;
  justify-content: center;
  margin-top: 1.5rem;
}

.page-link {
  border: none;
  color: #495057;
  padding: 0.5rem 0.75rem;
  border-radius: 6px;
}

.page-item.active .page-link {
  background-color: #17a2b8;
  border-color: #17a2b8;
}

/* Responsive adjustments */
@media (max-width: 992px) {
  .table-container {
    overflow-x: auto;
  }
  
  .table {
    min-width: 800px;
  }
}

/* Empty state */
.empty-state {
  padding: 3rem 1rem;
  text-align: center;
  color: #6c757d;
}

.empty-state i {
  font-size: 3rem;
  margin-bottom: 1rem;
  color: #dee2e6;
}
</style>
<body>

  <div class="sidebar" id="sidebar">
    <div class="d-flex justify-content-center mb-5 mt-3">
      <img src="<%= settings.logo ? settings.logo : '/images/napslogo.png' %>" alt="Logo" width="150" />
    </div>
    <nav>
      <a href="/admin/index"><i class="bi bi-speedometer2"></i> Dashboard</a>
      <a href="/admin/users" class="active"><i class="bi bi-person-circle"></i> Users Profile</a>
      <a href="/admin/staff"><i class="bi bi-people-fill"></i> Account Creation</a>
      <a href="/admin/orders"><i class="bi bi-receipt"></i> Orders</a>
      <a href="/admin/reservations"><i class="bi bi-journal-bookmark"></i> Reservations</a>
      <a href="/admin/discounts"><i class="bi bi-percent"></i> Discounts</a>
      <a href="/admin/reviews"><i class="bi bi-chat-dots"></i> Users Reviews</a>
      <a href="/admin/products"><i class="bi bi-box-seam"></i> Inventory</a>
      <a href="/admin/table"><i class="bi bi-table"></i> Table</a>
      <a href="/admin/calendar"><i class="bi bi-calendar-event"></i> Calendar</a>
      <a href="/admin/settings"><i class="bi bi-gear"></i> Settings</a>
    </nav>

    <div class="mt-4 p-3 border-top">
      <label class="form-check-label fw-bold d-block mb-2">Restaurant Status</label>
      <div class="form-check form-switch">
        <input class="form-check-input" type="checkbox" id="restaurantToggle">
        <label class="form-check-label" for="restaurantToggle" id="restaurantLabel">Open</label>
      </div>
    </div>
  </div>

  <div class="main-content">
    <div class="navbar-custom-wrapper">
      <nav class="navbar navbar-custom d-flex justify-content-between align-items-center">
        <div class="d-flex align-items-center">
          <img src="/images/admin-avatar.avif" alt="Admin" class="rounded-circle me-3">
          <div class="admin-info">
            <div class="fw-semibold">Super Admin</div>
            <p>napsgrillrestobar08@gmail.com</p>
          </div>
        </div>

      <a href="/logout" class="btn btn-sm btn-danger d-flex align-items-center">
        <i class="bi bi-box-arrow-right me-1"></i> Logout
      </a>
      </nav>
    </div>

    <div class="container-fluid">
      <h2 class="mb-4 fw-bold" style="color: #333446;">Users List</h2>

      <!-- Search and Filter -->
      <div class="search-filter-container">
        <input 
          type="text" 
          id="searchInput" 
          class="form-control search-box" 
          placeholder="Search by name or email">
        
        <select id="statusFilter" class="form-select filter-select">
          <option value="">All Status</option>
          <option value="Active">Active</option>
          <option value="Blocked">Blocked</option>
        </select>
      </div>

      <% if (users.length === 0) { %>
        <div class="empty-state">
          <i class="bi bi-people"></i>
          <h5>No users found</h5>
          <p class="text-muted">There are no users to display at the moment.</p>
        </div>
      <% } else { %>
        <div class="table-container">
          <table class="table align-middle">
            <thead>
              <tr>
                <th>#</th>
                <th>User</th>
                <th>Contact</th>
                <th>Address</th>
                <th>Status</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody id="usersBody">
              <% users.forEach((user, index) => { %>
              <tr data-name="<%= user.firstName + ' ' + user.lastName %>" 
                  data-email="<%= user.email %>" 
                  data-status="<%= user.isVerified ? 'Active' : 'Blocked' %>">
                <td class="user-index"><%= index + 1 %></td>
                <td>
                  <div class="user-info">
                    <div class="user-name">
                      <%= user.firstName %> <%= user.lastName %>
                    </div>
                    <div class="user-email">
                      <%= user.email %>
                    </div>
                  </div>
                </td>
                <td><%= user.contactNo %></td>
                <td><%= user.address %></td>
                <td>
                  <% if (user.isVerified) { %>
                    <span class="status-badge status-active">Active</span>
                  <% } else { %>
                    <span class="status-badge status-blocked">Blocked</span>
                  <% } %>
                </td>
                <td>
                  <% if (user.isVerified) { %>
                    <button class="btn btn-sm btn-block btn-action" onclick="handleUserStatus('<%= user._id %>', 'block')">
                      <i class="bi bi-lock-fill"></i> Block
                    </button>
                  <% } else { %>
                    <button class="btn btn-sm btn-unblock btn-action" onclick="handleUserStatus('<%= user._id %>', 'unblock')">
                      <i class="bi bi-unlock-fill"></i> Unblock
                    </button>
                  <% } %>
                </td>
              </tr>
              <% }) %>
            </tbody>
          </table>
        </div>

        <div class="pagination-container">
          <ul class="pagination pagination-sm" id="pagination"></ul>
        </div>
      <% } %>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  
  <script>
    const searchInput = document.getElementById("searchInput");
    const statusFilter = document.getElementById("statusFilter");
    const tableRows = Array.from(document.querySelectorAll("#usersBody tr"));
    const pagination = document.getElementById("pagination");

    const rowsPerPage = 10;
    let currentPage = 1;

    function renderTable() {
      const search = searchInput.value.toLowerCase();
      const status = statusFilter.value;

      const filteredRows = tableRows.filter(row => {
        const name = row.dataset.name.toLowerCase();
        const email = row.dataset.email.toLowerCase();
        const rowStatus = row.dataset.status;

        return (
          (name.includes(search) || email.includes(search)) &&
          (status === "" || rowStatus === status)
        );
      });

      const totalPages = Math.ceil(filteredRows.length / rowsPerPage);
      currentPage = Math.min(currentPage, totalPages || 1);

      tableRows.forEach(row => (row.style.display = "none"));

      const start = (currentPage - 1) * rowsPerPage;
      const end = start + rowsPerPage;

      filteredRows.slice(start, end).forEach((row, i) => {
        row.style.display = "";
        const indexCell = row.querySelector(".user-index");
        if (indexCell) indexCell.textContent = start + i + 1;
      });

      renderPagination(totalPages);
    }

    function renderPagination(totalPages) {
      pagination.innerHTML = "";

      for (let i = 1; i <= totalPages; i++) {
        const li = document.createElement("li");
        li.className = `page-item ${i === currentPage ? "active" : ""}`;
        li.innerHTML = `<a class="page-link" href="#">${i}</a>`;
        li.addEventListener("click", e => {
          e.preventDefault();
          currentPage = i;
          renderTable();
        });
        pagination.appendChild(li);
      }
    }

    function handleUserStatus(userId, action) {
      const actionText = action === 'block' ? 'Block' : 'Unblock';
      const buttonColor = action === 'block' ? '#d33' : '#28a745';

      Swal.fire({
        title: `Are you sure?`,
        text: `You are about to ${actionText.toLowerCase()} this user.`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: buttonColor,
        cancelButtonColor: '#6c757d',
        confirmButtonText: `Yes, ${actionText}`
      }).then(result => {
        if (result.isConfirmed) {
          fetch(`/admin/users/${userId}/${action}`, {
            method: 'POST'
          })
          .then(res => res.json())
          .then(data => {
            if (data.success) {
              Swal.fire({
                icon: 'success',
                title: `${actionText}ed!`,
                text: data.message,
                timer: 1500,
                showConfirmButton: false
              }).then(() => location.reload());
            } else {
              Swal.fire('Error', data.message, 'error');
            }
          })
          .catch(() => {
            Swal.fire('Error', 'Something went wrong.', 'error');
          });
        }
      });
    }

    // Event listeners
    searchInput.addEventListener("input", () => {
      currentPage = 1;
      renderTable();
    });

    statusFilter.addEventListener("change", () => {
      currentPage = 1;
      renderTable();
    });

    // Initial load
    renderTable();
  </script>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const toggle = document.getElementById("restaurantToggle");
      const label = document.getElementById("restaurantLabel");

      const isClosed = localStorage.getItem("restaurantClosed") === "true";
      toggle.checked = !isClosed;
      label.textContent = isClosed ? "Closed" : "Open";

      toggle.addEventListener("change", () => {
        const newStatusClosed = !toggle.checked;
        localStorage.setItem("restaurantClosed", newStatusClosed);
        label.textContent = newStatusClosed ? "Closed" : "Open";

        Swal.fire({
          title: newStatusClosed ? "Restaurant is Closed" : "Restaurant is Open",
          text: `The restaurant is now ${newStatusClosed ? "closed" : "open"} for orders.`,
          icon: newStatusClosed ? "error" : "success",
          confirmButtonColor: newStatusClosed ? "#d33" : "#28a745",
          confirmButtonText: "OK"
        });
      });
    });
  </script>
</body>
</html>
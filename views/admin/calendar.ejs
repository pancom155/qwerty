<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Staff Dashboard | Calendar</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<style>

  body {
    display: flex;
    min-height: 100vh;
    margin: 0;
    background-color: #f1f1f1;
}

.sidebar {
    position: fixed;
    top: 0;
    left: 0;
    width: 250px;
    height: 100vh;
    background-color: #f8f9fa;
    padding: 5px;
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    align-items: center;
    overflow: hidden; 
    z-index: 1000;
}

.sidebar img {
    width: 100px;
    height: 100px;
    border-radius: 50%;
}

.sidebar nav {
    display: flex;
    flex-direction: column;
    width: 100%;
    align-items: center;
}

.sidebar nav a {
    padding: 10px 20px;
    color: #000;
    text-decoration: none;
    border-radius: 10px;
    margin-bottom: 10px;
    transition: background 0.5s ease;
    width: 90%;
}

.sidebar nav a.active,
.sidebar nav a:hover {
    background: #5e5e5e;
    color: #fff;
}

.sidebar button {
    width: 100%;
    padding: 10px;
    border: none;
    border-radius: 10px;
    color: #fff;
    background: #5e5e5e;
    cursor: pointer;
    margin-top: auto;
}

.main-content {
    margin-left: 250px; 
    flex-grow: 1;
    padding: 0;
    display: flex;
    flex-direction: column;
}

.navbar-custom-wrapper {
    display: flex;
    justify-content: center;
    margin-bottom: 2px;
}

.navbar-custom {
    background-color: #ffffff;
    border-bottom-left-radius: 20px;
    border-bottom-right-radius: 20px;
    width: 95%;
    max-width: 1200px;
    padding: 0.5rem 1.5rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.navbar-custom img {
    width: 40px;
    height: 40px;
    object-fit: cover;
    border: 1px solid black;
}

.navbar-custom .admin-info {
    line-height: 1.2;
}

.navbar-custom .admin-info .fw-semibold {
    font-size: 1rem;
    color: #343a40;
}

.navbar-custom .admin-info p {
    margin: 0;
    font-size: 0.875rem;
    color: #6c757d;
}

.navbar-custom .btn-danger {
    padding: 0.4rem 0.6rem;
}

.container-fluid {
    padding: 2rem;
}

.notification-container {
    position: relative;
    margin-right: 15px;
}

/* Notification badge */
.notification-badge {
    position: absolute;
    top: -5px;
    right: -5px;
    background-color: #dc3545;
    color: white;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    font-weight: bold;
    transition: transform 0.3s ease;
}

/* Badge pulse animation when updated */
.notification-badge.updated {
    transform: scale(1.3);
    animation: pulse 0.5s ease;
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.3); }
    100% { transform: scale(1); }
}

/* Dropdown styling */
.notification-dropdown {
    position: absolute;
    top: 100%;
    right: 0;
    width: 350px;
    background: #fff;
    border-radius: 10px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
    z-index: 1050;
    padding: 15px;
    display: none;
    max-height: 400px;
    overflow-y: auto;
    transition: opacity 0.3s ease, transform 0.3s ease;
}

/* Notification items */
.notification-item {
    padding: 10px;
    border-bottom: 1px solid #eee;
    cursor: pointer;
    opacity: 0;
    transform: translateY(-10px);
    animation: slideIn 0.5s forwards;
}

.notification-item:last-child {
    border-bottom: none;
}

.notification-item:hover {
    background-color: #f8f9fa;
}

/* Slide-in effect for new notifications */
@keyframes slideIn {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Notification text */
.notification-title {
    font-weight: bold;
    margin-bottom: 5px;
    color: #343a40;
}

.notification-message {
    font-size: 14px;
    color: #495057;
    margin-bottom: 5px;
}

.notification-time {
    font-size: 12px;
    color: #6c757d;
}

/* "No Notifications" message */
.notification-empty {
    padding: 15px;
    text-align: center;
    color: #6c757d;
    font-style: italic;
}

/* View all orders button */
.view-orders-btn {
    width: 100%;
    margin-top: 10px;
    font-weight: bold;
}

/* Scrollbar for dropdown */
.notification-dropdown::-webkit-scrollbar {
    width: 6px;
}

.notification-dropdown::-webkit-scrollbar-thumb {
    background-color: rgba(0,0,0,0.2);
    border-radius: 3px;
}

.notification-dropdown::-webkit-scrollbar-track {
    background: transparent;
}

  /* ========== MODERN CALENDAR STYLES ========== */
  
  /* Calendar container */
  #calendar {
    background: #ffffff;
    border-radius: 16px;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
    padding: 24px;
    margin-top: 16px;
    border: 1px solid rgba(0, 0, 0, 0.05);
  }
  
  /* Calendar header */
  .fc .fc-toolbar {
    flex-wrap: wrap;
    gap: 16px;
    margin-bottom: 24px;
  }
  
  .fc .fc-toolbar-title {
    font-size: 1.8rem;
    font-weight: 700;
    color: #2c3e50;
    margin: 0;
  }
  
  /* Calendar buttons */
  .fc .fc-button {
    background-color: #ffffff;
    border: 1px solid #e0e6ed;
    color: #5a6c7d;
    font-weight: 500;
    padding: 8px 16px;
    border-radius: 8px;
    transition: all 0.2s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.03);
  }
  
  .fc .fc-button:hover {
    background-color: #f8f9fa;
    border-color: #d0d7de;
    color: #2c3e50;
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.06);
  }
  
  .fc .fc-button:focus,
  .fc .fc-button:active {
    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2) !important;
  }
  
  .fc .fc-button-primary:not(:disabled).fc-button-active,
  .fc .fc-button-primary:not(:disabled):active {
    background-color: #3498db;
    border-color: #3498db;
    color: white;
  }
  
  /* Today button */
  .fc .fc-today-button {
    background-color: #3498db;
    border-color: #3498db;
    color: white;
  }
  
  .fc .fc-today-button:hover {
    background-color: #2980b9;
    border-color: #2980b9;
    color: white;
  }
  
  /* Calendar header cells */
  .fc .fc-col-header-cell {
    background-color: #f8fafc;
    padding: 12px 0;
    border: none;
  }
  
  .fc .fc-col-header-cell-cushion {
    color: #4a5568;
    font-weight: 600;
    font-size: 0.9rem;
    text-decoration: none;
    padding: 8px;
  }
  
  /* Day cells */
  .fc .fc-daygrid-day {
    border: 1px solid #f1f5f9;
    transition: all 0.2s ease;
  }
  
  .fc .fc-daygrid-day:hover {
    background-color: #f8fafc;
  }
  
  .fc .fc-daygrid-day.fc-day-today {
    background-color: rgba(52, 152, 219, 0.08);
  }
  
  .fc .fc-daygrid-day-number {
    color: #4a5568;
    font-weight: 500;
    padding: 8px;
    text-decoration: none;
  }
  
  .fc .fc-day-today .fc-daygrid-day-number {
    color: #3498db;
    font-weight: 700;
  }
  
  /* Event styles */
  .fc .fc-event {
    border: none;
    border-radius: 6px;
    padding: 4px 6px;
    font-size: 0.85rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
  }
  
  .fc .fc-event:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.12);
  }
  
  .fc .fc-event-main {
    padding: 2px 4px;
  }
  
  /* Event colors based on status */
  .fc-event-pending {
    background-color: #d2d2d2;
    border-left: 4px solid #e67e22;
  }
  
  .fc-event-confirmed {
    background-color: #cdcdcd;
    border-left: 4px solid #229954;
  }
  
  .fc-event-cancelled {
    background-color: #e74c3c;
    border-left: 4px solid #c0392b;
  }
  
  .fc-event-completed {
    background-color: #3498db;
    border-left: 4px solid #2980b9;
  }
  
  /* Week and day view adjustments */
  .fc-timeGridWeek-view .fc-timegrid-slot,
  .fc-timeGridDay-view .fc-timegrid-slot {
    height: 2.5em;
  }
  
  .fc .fc-timegrid-axis-cushion,
  .fc .fc-timegrid-slot-label-cushion {
    color: #718096;
    font-size: 0.85rem;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    #calendar {
      padding: 16px;
    }
    
    .fc .fc-toolbar {
      flex-direction: column;
      align-items: flex-start;
    }
    
    .fc .fc-toolbar-chunk {
      margin-bottom: 12px;
    }
    
    .fc .fc-toolbar-title {
      font-size: 1.5rem;
    }
  }
</style>
<body>

<div class="sidebar" id="sidebar">
    <div class="d-flex justify-content-center mb-5 mt-3">
      <img src="<%= settings && settings.logo ? settings.logo : '/images/napslogo.png' %>" alt="Logo" width="150" />
    </div>
    <nav>
      <a href="/admin/index"><i class="bi bi-speedometer2"></i> Dashboard</a>
      <a href="/admin/users"><i class="bi bi-person-circle"></i> Users Profile</a>
      <a href="/admin/staff"><i class="bi bi-people-fill"></i> Account Creation</a>
      <a href="/admin/orders"><i class="bi bi-receipt"></i> Orders</a>
      <a href="/admin/reservations"><i class="bi bi-journal-bookmark"></i> Reservations</a>
      <a href="/admin/discounts"><i class="bi bi-percent"></i> Discounts</a>
      <a href="/admin/reviews"><i class="bi bi-chat-dots"></i> Users Reviews</a>
      <a href="/admin/products"><i class="bi bi-box-seam"></i> Inventory</a>
      <a href="/admin/table"><i class="bi bi-table"></i> Table</a>
      <a href="/admin/calendar" class="active"><i class="bi bi-calendar-event"></i> Calendar</a>
      <a href="/admin/settings"><i class="bi bi-gear"></i> Settings</a>
    </nav>

  <div class="mt-4 p-3 border-top">
    <label class="form-check-label fw-bold d-block mb-2">Restaurant Status</label>
    <div class="form-check form-switch">
      <input class="form-check-input" type="checkbox" id="restaurantToggle">
      <label class="form-check-label" for="restaurantToggle" id="restaurantLabel">Open</label>
    </div>
  </div>
</div>

<div class="main-content">
  <div class="navbar-custom-wrapper">
    <nav class="navbar navbar-custom d-flex justify-content-between align-items-center px-3 py-2 shadow-sm bg-light">
      <div class="d-flex align-items-center">
        <img src="/images/admin-avatar.avif" alt="Admin" class="rounded-circle me-3" width="40" height="40">
        <div class="admin-info">
          <div class="fw-semibold mb-0">Super Admin</div>
          <small class="text-muted">napsgrillrestobar08@gmail.com</small>
        </div>
      </div>

      <a href="/logout" class="btn btn-sm btn-danger d-flex align-items-center">
        <i class="bi bi-box-arrow-right me-1"></i> Logout
      </a>
    </nav>
  </div>

  <div class="container-fluid mt-4">
  <h2 class="fw-bold mb-3" style="color: #333446;">Calendar</h2>

  <!-- Block Date Button -->
  <button id="blockDateBtn" class="btn btn-danger mb-3">
    <i class="bi bi-ban me-2"></i> Block Selected Date
  </button>

  <!-- Calendar Container -->
  <div id="calendar"></div>
</div>

<!-- Reservation Details Modal -->
<div class="modal fade" id="reservationModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content shadow-lg border-0 rounded-3">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title">
          <i class="bi bi-calendar-event me-2"></i> Reservation Details
        </h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
      </div>

      <div class="modal-body">
        <div class="row g-3">
          <!-- User Info -->
          <div class="col-md-6">
            <div class="card shadow-sm border-0">
              <div class="card-body">
                <h6 class="fw-bold mb-3">
                  <i class="bi bi-person-circle me-2"></i>User Information
                </h6>
                <p class="mb-1"><strong>Full Name:</strong> <span id="resFullName"></span></p>
                <p class="mb-1"><strong>Email:</strong> <span id="resEmail"></span></p>
                <p class="mb-0"><strong>Phone:</strong> <span id="resPhone"></span></p>
              </div>
            </div>
          </div>

          <!-- Reservation Info -->
          <div class="col-md-6">
            <div class="card shadow-sm border-0">
              <div class="card-body">
                <h6 class="fw-bold mb-3">
                  <i class="bi bi-info-circle me-2"></i>Reservation Info
                </h6>
                <p class="mb-1"><strong>Table:</strong> <span id="resTable"></span></p>
                <p class="mb-1"><strong>Reference No.:</strong> <span id="resRef"></span></p>
                <p class="mb-1"><strong>Total Price:</strong> ₱<span id="resPrice"></span></p>
                <p class="mb-1"><strong>Reservation Fee:</strong> ₱<span id="resFee"></span></p>
                <p class="mb-0"><strong>Status:</strong>
                  <span id="resStatus" class="badge bg-warning text-dark px-3 py-2 rounded-pill"></span>
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>

    </div>
  </div>
</div>

<!-- ✅ Scripts -->
<script src="/socket.io/socket.io.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
document.addEventListener('DOMContentLoaded', async function () {

  const calendarEl = document.getElementById('calendar');
  const blockDateBtn = document.getElementById('blockDateBtn');
  let selectedDate = null;

  // ✅ Initialize FullCalendar
  const calendar = new FullCalendar.Calendar(calendarEl, {
    initialView: 'dayGridMonth',
    themeSystem: 'bootstrap5',
    height: 'auto',
    selectable: true,
    headerToolbar: {
      left: 'prev,next today',
      center: 'title',
      right: 'dayGridMonth,timeGridWeek,timeGridDay'
    },

    // Load both reservation events and blocked dates
    events: async (fetchInfo, successCallback, failureCallback) => {
      try {
        const [reservations, blockedDates] = await Promise.all([
          fetch('/staff/calendar/events').then(r => r.json()),
          fetch('/calendar/blocked-dates').then(r => r.json())
        ]);

        const blockEvents = blockedDates.map(date => ({
          title: 'Blocked',
          start: date,
          color: '#dc3545'
        }));

        successCallback([...reservations, ...blockEvents]);
      } catch (err) {
        failureCallback(err);
      }
    },

    dateClick: function (info) {
      selectedDate = info.dateStr;
      calendar.select(info.date);
    },

    eventClick: async function (info) {
      const event = info.event;

      // ✅ If user clicked a blocked date
      if (event.title === 'Blocked') {
        const confirm = await Swal.fire({
          title: `Date ${event.startStr} is blocked`,
          text: 'Do you want to unblock this date?',
          icon: 'question',
          showCancelButton: true,
          confirmButtonText: 'Yes, Unblock',
          cancelButtonText: 'Cancel'
        });

        if (confirm.isConfirmed) {
          const res = await fetch('/calendar/unblock-date', {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ date: event.startStr })
          });

          const data = await res.json();

          if (res.ok) {
            Swal.fire({ icon: 'success', title: data.message });
            event.remove(); // Remove event from calendar
          } else {
            Swal.fire({ icon: 'error', title: 'Error', text: data.message });
          }
        }

        return;
      }

      // ✅ Otherwise, it's a reservation event
      const props = event.extendedProps;
      document.getElementById('resFullName').innerText = props.fullName || '-';
      document.getElementById('resEmail').innerText = props.email || '-';
      document.getElementById('resPhone').innerText = props.phone || '-';
      document.getElementById('resTable').innerText = props.table || '-';
      document.getElementById('resRef').innerText = props.refNo || '-';
      document.getElementById('resPrice').innerText = props.price || '0';
      document.getElementById('resFee').innerText = props.fee || '0';
      document.getElementById('resStatus').innerText = props.status || 'Pending';

      const modal = new bootstrap.Modal(document.getElementById('reservationModal'));
      modal.show();
    }
  });

  calendar.render();

  // ✅ Block selected date
  blockDateBtn.addEventListener('click', async () => {
    if (!selectedDate) {
      return Swal.fire({ icon: 'warning', title: 'Please select a date first.' });
    }

    const confirm = await Swal.fire({
      title: `Block date ${selectedDate}?`,
      input: 'text',
      inputPlaceholder: 'Optional reason...',
      icon: 'question',
      showCancelButton: true,
      confirmButtonText: 'Yes, Block it',
      cancelButtonText: 'Cancel'
    });

    if (!confirm.isConfirmed) return;

    const reason = confirm.value || '';

    const res = await fetch('/calendar/block-date', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ date: selectedDate, reason })
    });

    const data = await res.json();

    if (res.ok) {
      Swal.fire({ icon: 'success', title: 'Date blocked successfully!' });
      calendar.addEvent({
        title: 'Blocked',
        start: selectedDate,
        color: '#dc3545'
      });
    } else {
      Swal.fire({ icon: 'error', title: 'Error', text: data.message });
    }
  });

});
</script>


</body>
</html>